#!/usr/bin/env perl

use strict;
use warnings;
use 5.020;
use lib::findbin '../lib'; # dev-only
use App::matl;

# PODNAME: matl
# ABSTRACT: Perl mathy REPL
# VERSION

=head1 SYNOPSIS

 % matl
 matl> 1+2
 3
 matl> [1,2,3]
 -
   - 1
   - 2
   - 3
 matl> 
      
=head1 DESCRIPTION

C<matl> is a little REPL that turns on some things that are handy for doing mathy things with
arbitrary position integers or floats as appropriate.  For simple non reference defined values
(strings and numbers) the result is printed out.  For more complicated data structures, output
is displayed using L<YAML> with C<$YAML::Stringify> turned on.  Stringification is turned on
so that big number classes L<Math::BigInt> and L<Math::BigFloat> are easy to read.  These
classes are used by default via the L<bignum> pragma for integer and floating point values.

The C<@_> is set to the previous line's result and C<$_> is set to the previous line first value.

Press ^D (or whatever C<EOF> is on your platform) to quit.  Input is C<eval>'d in the C<main> namespace.

=over 4

=item L<autodie> C<:all> is imported

=item L<List::SomeUtils> C<:all> is imported

=item The C<cpanm> function is provided to install modules from the REPL.

=item The C<_> function returns the value of $_, and thus is a shortcut for the previous line's value.

=back

=head1 SEE ALSO

=over 4

=item L<Shell::Perl>

=item L<perldebug>

=item ... plus too many other REPLs to name in such a small space

=back

=cut

my $rv = App::matl->main(@ARGV);
exit $rv;
